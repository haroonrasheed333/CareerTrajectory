
Brenda Powers
								brendapowers@rocketmail.com

OVERVIEW

Project level design engineer in both digital logic and software engineering disciplines.
Experience in taking projects from conception into production as both a sole design
engineer with complete project experience as well as team contributor. Experience at both
the low hardware level, low software level as well as system level experience.

Strong ability to work independently. Capable of making decisions and acting through to
completion. Successful completion of multiple engineering projects including conception,
design, engineering, test and documentation.

	INDUSTRIAL BACKGROUND EXPERIENCE

QUANTUM San Jose, CA
Software Automation Engineer - 11/2011 - 02/2012
Worked on the Quantum vmPRO product which is a virtual machine for doing backup/restore
of vmWare vms. Ran automated tests and did code maintenance of the automatation software.

HP/3PAR (Enterprise storage products) - Fremont, CA.
Hardware QA and Software Automation Engineer - 2007-2009
Worked on the Decru data encryption devices developing test cases, testing and building
an automation infrastructure.
	 Designed and coded a 60,000 line automation software project to execute the QA test
cases for a SAN based encryption product. The project was coded in Perl 5.x in a Linux
environment. Heavy use was made of the SANBlaze FC emulator and APCON FC switch to
facilitate a totally automated testing environment.
	 Designed and coded an application using the SANBlaze FC emulator to verify the SCSI
protocol as commands were passed into and data and status retrieved from the NetApp
encryption device. This allowed verification that the device was not corrupting SCSI
commands.
	 Wrote all the QA test cases for a new encryption project and setup the necessary lab
equipment for the testing of the  new product. I also introduced the SANBlaze FC emulator
to the company to help automate the testing process and reduce hardware overhead in the
data center.
	 Wrote all the test cases necessary to achieve Common Criteria certification for the SAN
based encryption product.

Sabbatical
Nyingma Institute, Berkeley, CA. - volunteer work - 2003-2004
Yeshe De, Berkeley, CA. - volunteer work - 2004-2005
SYDA, Oakland, CA. - volunteer work - 2004-2005
Laney College, Oakland, CA. - continuing education 2005-2007

Adaptec (SCSI and fiber channel HBAs and drivers) - Milpitas, CA. 
Hardware Test and Software Automation Engineer - 2002-2003
	 Designed and coded in C using the Eagle emulator, an error injection project. Software
on the Eagle was written to emulate a SCSI hard disc. The software had a user interface to
allow modifications to the SCSI protocol so as to induce errors during SCSI activity. Such
injected errors helped identify faults in the SCSI HBA and drivers. This project allowed
verification that the Adaptec HBA and device driver were properly handling the SCSI
protocol.
	 Developed test cases to test Adaptec SCSI and FC HBAs and drivers in a Netware
environment.
	 Tested SCSI HBAs &amp; drivers for Windows NT and Netware.

Mylex (RAID controllers) - Fremont, CA.
Project Lead  Engineer / Sr. Software Engineer - 1999-2002
	 Project lead for an I2O project of which Mylex supplied RAID support. The project was a
consortium of companies including Intel, Mylex, WindRiver and Symbios. My part was project
lead for the Mylex RAID portion. In addition to serving as project lead, I also developed
and wrote in C the interface between the WindRiver VxWorks RTOS and the Mylex RAID
firmware.
	 Served on the I2O standards committee representing  the interests of Mylex and RAID
technology in I2O.

AMD (CPUs and peripheral controller ICs) - Sunnyvale, CA. 
Sr. Software Engineer and Team Lead - 1997-1999
	 Team lead of six engineers on the SCSI driver development effort for 1 year. I also
developed and coded in C the SCSI drivers for the Netware operating systems.
	 Served on the SCSI standards committee representing the interests of AMD to the SCSI
standards committee.
	 As part of AMDs effort to improve its engineering processes, I developed the process
for how software should be developed and tested to help reduce errors.

Micrographics Technology (Archival storage technology) - Mtn. View, CA. 
Sr. Software Engineer - 1995-1997
	 Provided a complete redesign of the MTC tape sub-system to use SCSI 9-track tape units
and added software support for a large variety of tape format standards. The MTC machine
produced microfiche from corporate data taken from financial institutions and stored on 9-
track tape in a variety of tape format standards.
	 Designed a 7 tape streaming tape sub-system to replace the single tape sub-system. This
provided increased data transfer and reduced latency due to operator intervention.

Zendex (Multibus products/systems) - Dublin, CA.
Hardware/Software Engineer - 1984-1995
	 Designed Multibus-I boards using a variety of Intel microprocessors and micro
controllers The design process included doing the schematic capture, working with PCB
layout engineers and PCB fabricators. I also built the prototypes, wrote the bring-up
software for the boards using either assembler or C languages and did the entire hardware
debugging. Following debug, I brought the board product into full production which
included writing all the diagnostic software for the test lab.
	 Developed software for the test lab to test and repair the boards. Software was written
either in assembler, C or PLM/86. Test applications were sometimes ROM based and sometimes
operating system applications.
	 Developed device drivers for the board products for the Intel iRMX operating system in
addition to my work writing test software. The iRMX operating system was an RTOS from
Intel which required a kernel re-build for each new device driver in a manner similar to
Unix.

Lawrence Livermore Lab (High energy research, advanced computations products) -
Livermore, CA. 
R/D Technician - 1976-1984
	 My responsibility was to build and test PDP-11 based communication multiplexors. I
would work with parts vendors to acquire all components of a project including cabinets,
power supplies, cables, fans, ICs, boards and software. I would build each unit and test
it for functionality.
	 To assist my efforts I wrote test and diagnostic software for the multiplexors. Using
PDP-11 assembler, I wrote tests for all functions of the multiplexors to assist in
building and diagnosing the device.

* * *
MULTI-DISCIPLINE BACKGROUND IN HARDWARE AND SOFTWARE DEVELOPMENT
 Board level digital design using  schematic capture tools, micros, PLDs and discrete
logic
 Board level bring up using all diagnostic tools and custom written testing software
 Hardware prototyping and board bring up in a ROM based environment

HARDWARE DEVELOPMENT USING A RANGE OF TOOLS
 Programmable logic  (PALs, FPGAs)
 8,16,32-bit  microprocessors  and micro controllers - Intel specific
 ORCAD schematic capture and ExpressPCB
 Experienced in the use of  logic analyzers, oscilloscopes , DVMs, ICE and protocol
analyzers
 Experienced in Extreme SCSI, Finisar analyzer, APCON FC switch, SANBlaze  FC emulator

SOFTWARE DEVELOPMENT USING A RANGE OF TOOLS
 Software development using assembly language for hardware diagnostics and applications
 SCSI device driver development using C in a Windows environment
 Automation test software in a Linux environment using Perl and XML
 PCB board level bring up using assembly language in a ROM based application

SUPPORTING WORK
 Writing of design specifications for all projects
 Writing product requirements documentation in conjunction with marketing
 Writing test cases for QA on all products
 Project scheduling using Microsoft tools

EDUCATION

Cal. State Hayward, Hayward, CA - B.S. Computer Science GPA 3.8
Trinidad St. Jr. College, Trinidad, CO - A.A.S. Electronics Technology GPA 4.0



  
    assembler
    assembly language
  
  
    automate
  
  
    Automation
    automation
  
  
    backup
  
  
    C
  
  
    cables
  
  
    CA
  
  
    HARDWARE
    Hardware
    hardware
  
  
    controller
  
  
    encryption
  
  
    data transfer
  
  
    debugging
  
  
    digital design
  
  
    documentation
  
  
    drivers
  
  
    financial
  
  
    HP
  
  
    Intel
  
  
    languages
  
  
    layout
  
  
    Team lead
  
  
    Linux
  
  
    logic
  
  
    marketing
 Writing
  
  
    micros
  
  
    microprocessors
  
  
    Windows
  
  
    Windows NT
  
  
    Enterprise
    enterprise
  
  
    Netware
  
  
    operating systems
    operating system
  
  
    ORCAD
  
  
    oscilloscopes
  
  
    PDP-11
  
  
    Perl
  
  
    Perl 5
  
  
    PLM
  
  
    power supplies
  
  
    processes
  
  
    Project lead
    project lead
    project
lead
  
  
    prototyping
  
  
    QA
  
  
    RAID
  
  
    research
  
  
    RTOS
  
  
    SAN
  
  
    scheduling
  
  
    SCSI 9
    SCSI
  
  
    Software development
    SOFTWARE DEVELOPMENT
  
  
    switch
  
  
    software support
  
  
    Unix
  
  
    user interface
  
  
    vms
  
  
    VxWorks
  
  
    written
  
  
    XML
  


